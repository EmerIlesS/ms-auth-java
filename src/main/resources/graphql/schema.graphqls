type User {
    id: ID!
    email: String!
    firstName: String!
    lastName: String!
    role: String!
    favorites: [ID!]!
}

type AuthPayload {
    token: String!
    user: User!
}

input RegisterInput {
    email: String!
    password: String!
    firstName: String!
    lastName: String!
}

input LoginInput {
    email: String!
    password: String!
}

type Query {
    me: User
}

type Mutation {
    register(input: RegisterInput!): AuthPayload!
    login(input: LoginInput!): AuthPayload!
    addToFavorites(productId: ID!): User!
    removeFromFavorites(productId: ID!): User!
}
